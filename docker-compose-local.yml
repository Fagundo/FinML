version: "3.3"

services:
  finml:
    image: finml
    build: .
    volumes:
      - ./finml:/finml
    env_file: .env
    ports:
      - 8000:8000
    depends_on:
      - postgres
    command: sh ./scripts/run.sh

  celery:
    image: finml
    volumes:
      - ./finml:/finml
    depends_on:
      - finml
      - redis
    env_file: .env
    command: python3 -m config.celery worker --loglevel debug

  celery_beat:
    image: finml
    volumes:
      - ./finml:/finml
    depends_on:
      - finml
      - redis
    env_file: .env
    command: python3 -m config.celery beat --loglevel=debug

  jupyterhub:
    build: JupyterHub/jupyterhub
    container_name: jupyterhub_hub
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - jupyterhub_data:/srv/jupyterhub
    env_file: .env
    labels:
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host:jupyter.example.com"

  reverse-proxy:
    image: traefik
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - ./JupyterHub/reverse-proxy/traefik.toml:/etc/traefik/traefik.toml
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/certs:/etc/certs

  jupyterlab:
    build: JupyterHub/jupyterlab
    image: jupyterlab_img
    container_name: jupyterlab
    network_mode: none
    command: echo

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - 6379:6379

  postgres:
    image: postgres:11
    env_file: .env
    ports:
        - 5432:5432
    volumes:
      - database:/var/lib/postgresql/data

volumes:
  database:
  jupyterhub_data:
